<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyi.teacher.dao.ILessonTradeDao" >
  <resultMap id="BaseResultMap" type="com.xiaoyi.teacher.domain.LessonTrade" >
    <id column="lessonTradeId" property="lessontradeid" jdbcType="VARCHAR" />
    <result column="lessonType" property="lessontype" jdbcType="INTEGER" />
    <result column="teacherId" property="teacherid" jdbcType="VARCHAR" />
    <result column="memberId" property="memberid" jdbcType="VARCHAR" />
    <result column="parentId" property="parentid" jdbcType="VARCHAR" />
    <result column="notes" property="notes" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="applyLessons" property="applylessons" jdbcType="SMALLINT" />
    <result column="feedback" property="feedback" jdbcType="VARCHAR" />
    <result column="applyTime" property="applytime" jdbcType="TIMESTAMP" />
    <result column="frozenLessons" property="applylessons" jdbcType="SMALLINT" />
    <result column="actualPay" property="actualPay"/>
  </resultMap>
  <sql id="Base_Column_List" >
    lessonTradeId, lessonType, teacherId, memberId, parentId, notes, status, applyLessons, 
    feedback, applyTime, frozenLessons,actualPay
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from lessontrade
    where lessonTradeId = #{lessontradeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from lessontrade
    where lessonTradeId = #{lessontradeid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaoyi.teacher.domain.LessonTrade" >
    insert into lessontrade (lessonTradeId, lessonType, teacherId, 
      memberId, parentId, notes, 
      status, applyLessons, feedback, 
      applyTime,frozenLessons,actualPay)
    values (#{lessontradeid,jdbcType=VARCHAR}, #{lessontype,jdbcType=INTEGER}, #{teacherid,jdbcType=VARCHAR}, 
      #{memberid,jdbcType=VARCHAR}, #{parentid,jdbcType=VARCHAR}, #{notes,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{applylessons,jdbcType=SMALLINT}, #{feedback,jdbcType=VARCHAR}, 
      #{applytime,jdbcType=TIMESTAMP}, #{frozenLessons,jdbcType=SMALLINT},#{actualPay})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyi.teacher.domain.LessonTrade" >
    insert into lessontrade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lessontradeid != null" >
        lessonTradeId,
      </if>
      <if test="lessontype != null" >
        lessonType,
      </if>
      <if test="teacherid != null" >
        teacherId,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="notes != null" >
        notes,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="applylessons != null" >
        applyLessons,
      </if>
      <if test="feedback != null" >
        feedback,
      </if>
      <if test="applytime != null" >
        applyTime,
      </if>
      <if test="frozenLessons != null" >
        frozenLessons,
      </if>
      <if test="actualPay!=null">
      	actualPay,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lessontradeid != null" >
        #{lessontradeid,jdbcType=VARCHAR},
      </if>
      <if test="lessontype != null" >
        #{lessontype,jdbcType=INTEGER},
      </if>
      <if test="teacherid != null" >
        #{teacherid,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="applylessons != null" >
        #{applylessons,jdbcType=SMALLINT},
      </if>
      <if test="feedback != null" >
        #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="applytime != null" >
        #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="frozenLessons != null" >
        #{frozenLessons,jdbcType=SMALLINT},
      </if>
      <if test="actualPay!=null">
      	#{actualPay},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.teacher.domain.LessonTrade" >
    update lessontrade
    <set >
      <if test="lessontype != null" >
        lessonType = #{lessontype,jdbcType=INTEGER},
      </if>
      <if test="teacherid != null" >
        teacherId = #{teacherid,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentId = #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="applylessons != null" >
        applyLessons = #{applylessons,jdbcType=SMALLINT},
      </if>
      <if test="feedback != null" >
        feedback = #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="applytime != null" >
        applyTime = #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="frozenLessons != null" >
       	frozenLessons = #{frozenLessons,jdbcType=SMALLINT},
      </if>
      <if test="actualPay!=null">
      	actualPay = #{actualPay}
      </if>
    </set>
    where lessonTradeId = #{lessontradeid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyi.teacher.domain.LessonTrade" >
    update lessontrade
    set lessonType = #{lessontype,jdbcType=INTEGER},
      teacherId = #{teacherid,jdbcType=VARCHAR},
      memberId = #{memberid,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=VARCHAR},
      notes = #{notes,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      applyLessons = #{applylessons,jdbcType=SMALLINT},
      feedback = #{feedback,jdbcType=VARCHAR},
      applyTime = #{applytime,jdbcType=TIMESTAMP},
      frozenLessons = #{frozenLessons,jdbcType=SMALLINT},
      actualPay = #{actualPay}
    where lessonTradeId = #{lessontradeid,jdbcType=VARCHAR}
  </update>
</mapper>